% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deg.module.R
\docType{methods}
\name{cluster.module}
\alias{cluster.module}
\title{Predict the DEGs modules shared by patients}
\usage{
cluster.module(res.module, vote.seed = FALSE, model.method = NULL,
  cores = 1, max.show.n = 1, seed = 1)
}
\arguments{
\item{res.module}{a 'seed.module' object. It should be the output of \code{\link{seed.module}}}

\item{vote.seed}{boolean, generate a generic seed or not}

\item{model.method}{the method to find the breakpoint of bi-clustering. It is accepted value including 'slope.clustering', 'max.square', 'min.slope', 'min.similarity'. If it is NULL, its value will be get from res.module[["decd.input"]][["module.method"]]}

\item{cores}{the thread number}

\item{max.show.n}{the number of sub-modules to report}

\item{seed}{a seed for random generator}
}
\value{
A cluster.module object.
It has two keys with prefix of "decd":

"decd.input", the input information, including binary DEG matrix,  used.genes and other parameter setting.

"decd.clustering",  the clustering and the representative patient information.

Other keys has a prefix of "M", which indicates clustered modules. Each module have several keys:

"curve", the patient-gene number during bi-clustering analysis;

"max.genes", the patient and genes when 'min.patients' is observed in bi-clustering analysis;

"max.patients", the patient and genes when 'min.genes' is reached in bi-clustering analysis";

"model", the patient and genes at the breakpoint of the `curve`;

"genes.removed", the ordered genes that are removed from module during bi-clustering analysis;

"patients.added", the ordered patients that are added to module during bi-clustering analysis
}
\description{
This function uses the output of \code{\link{bi.deg}} as input to predict the patient-DEG lists (or modules) shared by patients.
}
\details{
The function is to cluster the modules predicted by \code{\link{seed.module}}, which is very useful when there are too many modules in 'res.module'.

This functon perform a k-mean based clustering to cluster the predicted modules. The patients within the same cluster are ranked based on their connecting degrees so that to find the representative patient(s). if 'vote.seed' is false, the bi-clustering analysis results of the representative patient will be used as the final results of the module. Otherwise, a generic seed will be generated by a voting method and the final results is predicted by bi-clustering analysis using the new seed.
}
\examples{
\dontrun{
cluster.mods <- cluster.module(seed.mods, model.method='slope.clustering')
cluster.mods <- cluster.module(seed.mods, model.method='slope.clustering', vote.seed=T)
}
}
\author{
Guofeng Meng
}
\references{

}

